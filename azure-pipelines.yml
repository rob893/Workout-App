# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  tags:
    include:
    - v*

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:
# - script: dotnet build --configuration $(buildConfiguration)
#   workingDirectory: WorkoutApp.API/
#   displayName: 'dotnet build $(buildConfiguration)'

# Install .NET Core 3.1.x
- task: UseDotNet@2
  inputs:
    version: '3.1.x'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: false
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    workingDirectory: 'WorkoutApp.API/'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'API'
    publishLocation: 'Container'

- task: Npm@1
  inputs:
    command: 'install'
    workingDir: 'WorkoutApp-GraphQL/'
  
- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: 'WorkoutApp-GraphQL/'
    customCommand: 'run build'

- task: CopyFiles@2
  inputs:
    SourceFolder: 'WorkoutApp-GraphQL/'
    Contents: |
      dist/**/*.js
      src/**/*.ts
      package.json
      tsconfig.json
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'WorkoutApp-GraphQL/'
    ArtifactName: 'GraphQL'
    publishLocation: 'Container'

- task: Npm@1
  inputs:
    command: 'install'
    workingDir: 'WorkoutApp-SPA/'
  
- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: 'WorkoutApp-SPA/'
    customCommand: 'run build -- --prod'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'WorkoutApp-SPA/dist'
    ArtifactName: 'SPA'
    publishLocation: 'Container'